#!/usr/bin/env swift
import Foundation

/*
 Euler Project - Question 1:
 
 If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3,5,6 and 9. The sum of these multiples is 23.

 Find the sum of all the multiples of 3 or 5 below 1000.
 */


var sum:Int = 0

for i in 0..<1000 {
 
    if (i%3 == 0) || (i%5 == 0) {
        sum = sum + i
    }
    
}

//-----------------------------------------------------------

/*Euler Project - Question 2:
 
 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
        
    1,2,3,5,8,13,21,34,55,89..

 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

var summ:Int
var arr:[Int] = [1, 2]
var number:Int = 50

var sumEven = 2

for i in 0..<(number-2) { // first and two will be omitted
    summ = arr[i]+arr[i+1]
    arr.append(summ)
    
    if summ%2 == 0 && summ < 4000000000 {
        sumEven = sumEven + summ
    }
}

arr

//-----------------------------------------------------------

/*
 Euler Project - Question 3:
 
 The prime factors of 13195 are 5,7,13 and 29.

 What is the largest prime factor of the number 600851475143?
 */


var sayi = 13195
var primeNumbers = Set<Int>()

var c = 0

for i in 2...sayi {
    
    while sayi%i == 0 {
        sayi = sayi/i
        primeNumbers.insert(i)
    }
    
    if sayi == 1 { // we will exit the loop if the sayi equal to one
        break
    }
        
}

primeNumbers.max()
